version: '3.8'

services:
  oracle-db:
    image: container-registry.oracle.com/database/express:latest
    container_name: oracle-db
    ports:
      - "8090:1521"
    environment:
      ORACLE_ALLOW_REMOTE: 'true'
      ORACLE_DISABLE_ASYNCH_IO: 'true'
      ORACLE_PASSWORD: 'Secure@Pwa9'
    volumes:
      - D:\scripts:/docker-entrypoint-initdb.d/startup
      - oracle-data:/u01/app/oracle
    networks:
      - my_network

  redis:
    build:
      context: .
      dockerfile: C:\Users\e.akhavanrad\IdeaProjects\ErtebatFardaBoarding\src\main\resources\Dockerfile
    image: redis:6.0
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    networks:
      - my_network

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#    ports:
#      - "9200:9200"
#    volumes:
#      - esdata:/usr/share/elasticsearch/data
#    networks:
#      - my_network
#
#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.7.1
#    container_name: logstash
#    volumes:
#      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
#    ports:
#      - "5000:5000"
#    depends_on:
#      - elasticsearch
#    networks:
#      - my_network
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.7.1
#    container_name: kibana
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch
#    networks:
#      - my_network

  spring-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-app
    ports:
      - "8888:8888"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:oracle:thin:@oracle-db:1521:xe
      SPRING_DATASOURCE_USERNAME: C##test_user
      SPRING_DATASOURCE_PASSWORD: Secure@Pwa9
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      oracle-db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - my_network

networks:
  my_network:

volumes:
  oracle-data:
  redis-data:
#  esdata:
#    driver: local